version: '2.1'
services:
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.3'
    restart: 'always'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    ports:
      - '3306:3306'
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
    healthcheck:
      test: 'mysqladmin ping -h localhost -pmagento2'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: 'always'
    ports:
      - 8000:80
    networks:
      magento:
        aliases:
          - phpmyadmin.magento2.docker    
    links: 
      - db:db
    environment:
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
      - MYSQL_ROOT_PASSWORD=magento2
    depends_on:
      db:
        condition: service_healthy           
  redis:
    hostname: redis.magento2.docker
    image: 'redis:5.0'
    restart: 'always'
    volumes:
      - './htdocs:/app:ro,delegated'
      - './htdocs/generated:/app/generated:rw,delegated'
      - './htdocs/var:/app/var:rw,delegated'
      - './htdocs/app/etc:/app/app/etc:rw,delegated'
      - './htdocs/pub/media:/app/pub/media:rw,delegated'
      - './htdocs/pub/static:/app/pub/static:rw,delegated'
      - './htdocs/vendor:/app/vendor:ro,delegated'
    ports:
      - 6379
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  elasticsearch:
    hostname: elasticsearch.magento2.docker
    image: 'magento/magento-cloud-docker-elasticsearch:7.7-1.2.0'
    restart: 'always'
    networks:
      magento:
        aliases:
          - elasticsearch.magento2.docker
  fpm:
    hostname: fpm.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-fpm-1.2.0'
    restart: 'always'
    extends: generic
    volumes:
      - './htdocs:/app:ro,delegated'
      - './htdocs/generated:/app/generated:rw,delegated'
      - './htdocs/var:/app/var:rw,delegated'
      - './htdocs/app/etc:/app/app/etc:rw,delegated'
      - './htdocs/pub/media:/app/pub/media:rw,delegated'
      - './htdocs/pub/static:/app/pub/static:rw,delegated'
      - './htdocs/vendor:/app/vendor:ro,delegated'
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      db:
        condition: service_healthy
  web:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.2.0'
    restart: 'always'
    extends: generic
    volumes:
      - './htdocs:/app:ro,delegated'
      - './htdocs/generated:/app/generated:rw,delegated'
      - './htdocs/var:/app/var:rw,delegated'
      - './htdocs/app/etc:/app/app/etc:rw,delegated'
      - './htdocs/pub/media:/app/pub/media:rw,delegated'
      - './htdocs/pub/static:/app/pub/static:rw,delegated'
      - './htdocs/vendor:/app/vendor:ro,delegated'
    environment:
      - WITH_XDEBUG=1
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      fpm:
        condition: service_started
  tls:
    hostname: tls.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.2.0'
    restart: 'always'
    extends: generic
    networks:
      magento:
        aliases:
          - magento2.docker
    environment:
      UPSTREAM_HOST: web
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      web:
        condition: service_started
  generic:
    hostname: generic.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-cli-1.2.0'
    restart: 'always'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=default
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium'
  cli:
    hostname: cli.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-cli-1.2.0'
    restart: 'always'
    extends: generic
    volumes:
      - '.:/app:delegated'
    networks:
      magento-cli:
        aliases:
          - cli.magento2.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  mailhog:
    hostname: mailhog.magento2.docker
    image: 'mailhog/mailhog:latest'
    restart: 'always'
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      magento:
        aliases:
          - mailhog.magento2.docker
networks:
  magento:
    driver: bridge
  magento-cli:
    driver: bridge
